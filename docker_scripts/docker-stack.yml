version: '3.7'

services:


  caddy:
    image: caddy:2.3.0-alpine
    networks:
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/Caddyfile_auth:/etc/caddy/Caddyfile_auth
      - caddy_data:/data
      - caddy_config:/config


  apache:
    image: koo5/apache${PP}:latest
    networks:
      - frontend
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    volumes:
      #- ./../sources/apache/conf/ /usr/local/apache2/conf/
      #- ./../sources/apache/conf/httpd.conf /usr/local/apache2/conf/httpd.conf
      - "/etc/localtime:/etc/localtime:ro"
      - tmp:/usr/local/apache2/htdocs/tmp/
      - ./../sources/static/:/usr/local/apache2/htdocs/static/


  frontend-server:
    image: koo5/frontend-server${PP}:latest
    environment:
      DJANGO_ARGS: "${DJANGO_ARGS}"
      SECRET__INTERNAL_SERVICES_SERVER_URL: "http://internal-services:17788"
      SECRET__CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"
      DJANGO_SETTINGS_MODULE: "frontend_server.settings_prod"

    volumes:
      - tmp:/app/server_root/tmp
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - backend
      - frontend
    depends_on:
      - rabbitmq
      - internal-services
      - internal-workers
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
    secrets:
      - DJANGO_SECRET_KEY
      - AGRAPH_SECRET_HOST
      - AGRAPH_SECRET_PORT
      - AGRAPH_SUPER_USER
      - AGRAPH_SUPER_PASSWORD
      

  rabbitmq:
    image: rabbitmq:3.8.3
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
    volumes:
      - "/etc/localtime:/etc/localtime:ro"


  internal-workers:
    image: koo5/internal-workers${PP}:latest
    environment:
      SECRET__INTERNAL_SERVICES_SERVER_URL: "http://internal-services:17788"
      SECRET__CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"
      DETERMINANCY_CHECKER__USE__ENFORCER: "true"
    volumes:
      - tmp:/app/server_root/tmp
      - cache:/app/cache
      - "/etc/localtime:/etc/localtime:ro"
      # for gtrace:
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
    networks:
      - backend
    depends_on:
      - rabbitmq
      - internal-services
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
    secrets:
      - AGRAPH_SECRET_HOST
      - AGRAPH_SECRET_PORT
      - AGRAPH_SUPER_USER
      - AGRAPH_SUPER_PASSWORD


  internal-services:
    image: koo5/internal-services${PP}:latest
    environment:
      DJANGO_ARGS: "${DJANGO_ARGS}"
    volumes:
      - tmp:/app/server_root/tmp
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - backend
    depends_on:
      - rabbitmq
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any


  redis:
    image: redis:6-alpine
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure


  agraph:
    image: koo5/agraph${PP}:latest
    networks:
    - backend
    - frontend
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        # https://docs.docker.com/compose/compose-file/compose-file-v3/
        condition: any
        delay: "240s"
    secrets:
      - AGRAPH_SUPER_USER
      - AGRAPH_SUPER_PASSWORD
    environment:
      AGRAPH_SUPER_PASSWORD_FILE: /run/secrets/AGRAPH_SUPER_PASSWORD
      AGRAPH_SUPER_USER_FILE: /run/secrets/AGRAPH_SUPER_USER
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "agdata:/agraph/data"
      - "agconfig:/agraph/etc"
      - type: tmpfs
        target: /dev/shm
        tmpfs:
           size: 2096000000
    #shm_size: "1G" # not supported in swarm
    #finishme: use low-memory configuration


  flower:
    image: koo5/flower${PP}:latest
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
    volumes:
      - "/etc/localtime:/etc/localtime:ro"



networks:
  frontend:
  backend:
    #driver: overlay
    attachable: true
  hostnet:
    external: true
    name: host

volumes:
  tmp:
  cache:
  agdata:
  agconfig:
  caddy_data:
  caddy_config:

